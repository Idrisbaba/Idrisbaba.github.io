{
  "hash": "1a7f8a61e125037a2057af8e55cc5325",
  "result": {
    "engine": "knitr",
    "markdown": "## Getting started with remote sensing\n\n**Summary:** In week one, I was introduced to the concept of remote sensing, electromagnetic radiation, wavelength, spectral signature, sensors, data exploration, and then different applications of remote sensing, and lastly, I was introduced to different types of remote sensing images such as Landsat and sentinel imagery.\n\n**Independent thought:** I find the spectral signature interesting because I believe this could be applied in bare soil to have a rough idea of the components of that area, more like a preliminary approach to learning something within a particular area. Like in the case of planning you can know\n\n**limitations:**\n\n## Application:\n\nTCT, which stands for tassle cap transformation which I find very interesting and quite related to the topics covered in this week. The paper used Tassle cap transformation methodology to monitor forest vegetation and detect changes in the forest cover from a natural park in Bulgaria. Tasseled Cap Transformation (TCT) methodology was applied using Sentinel-2 satellite images, resulting in three components: \"brightness,\" \"greenness,\" and \"wetness. They used the \"greenness\" component to calculate the Normalized Differential Greenness Index (NDGI), and these provides data on forest vegetation dynamics over short and long-term periods (Andrey Stoyanov, 2022) . The study provided detailed maps showing changes in vegetation over different periods, highlighting areas of positive and negative changes. While this, which contrasts with the first paper, used Landsat 8 images to measure rice production at Al-Najaf in the middle south of Iraq, where they intended to qunatify the amount of rice being produces, and have some kind of accuracy in comparison to the information given by government of iran in force of food security. A new classification method using the Tasseled Cap Transformation (TCT) using Landsat-8 imagery (Saleh Ali, 2016)\n\nSummary: <https://quarto.org>.\n\n## Running Code\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n\n\nYou can add options to executable code like this\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\n\n\nThe `echo: false` option disables the printing of code (only output is displayed).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}